program: tr
method: bayes
metric:
  goal: maximize
  name: val/dice_all_scales_avg

command:
  - ${program}
  - gpu.devices=[1]
  - ${args_no_hyphens}

parameters:
  training.optimizer.name:
    distribution: categorical
    values:
      - Adam
      - AdamW

  training.learning_rate:
    min: 5.0e-05
    max: 0.001
    distribution: log_uniform_values

  training.optimizer.params.weight_decay:
    min: 1.0e-06
    max: 0.0005
    distribution: log_uniform_values

  training.num_epochs:
    min: 20
    max: 200
    distribution: int_uniform

  # Potential idea.
  # architecture.multiscale_weights:
  #   distribution: categorical
  #   values:
  #     # [fullres, midres, lowres]
  #     - [0.6, 0.3, 0.1]   # emphasize high-res
  #     - [0.33, 0.33, 0.33]# equal
  #     - [0.1, 0.3, 0.6]   # emphasize low-res
  #     - [0.5, 0.25, 0.25] # slight high-res bias
  #     - [0.25, 0.5, 0.25] # slight mid-res bias

  training.early_stopper.criterion:
    distribution: categorical
    values:
      - loss
      - dice

  training.early_stopper.patience:
    min: 5
    max: 30
    distribution: int_uniform

  training.batch_size:
    values: [1, 2, 4, 8, 16]
    distribution: categorical

  training.grad_clip_norm:
    min: 1
    max: 3
    distribution: int_uniform

  # Loss parameters (how much to weight cross entropy vs dice loss)
  training.loss.params.alpha:
    min: 0.1
    max: 0.7
    distribution: uniform

  architecture.cons_loss_start_epoch:
    distribution: categorical
    values: [0, 20, 50, 100]

  # Scheduler parameters
  training.scheduler.params.step_size:
    min: 10
    max: 50
    distribution: int_uniform

  training.scheduler.params.gamma:
    min: 0.05
    max: 0.3
    distribution: uniform

  # Architecture parameters
  architecture.depth:
    min: 4 #min is 4 due to ms_levels being 3 scales
    max: 5 #max is five for hipopcampus
    distribution: int_uniform

  architecture.n_filters:
    values: [8, 16, 32, 64]
    distribution: categorical

  architecture.dropout:
    min: 0.0
    max: 0.5
    distribution: uniform

  # W&B specific parameters
  wandb.name:
    values:
      - sweep_run_${now:%Y-%m-%d_%H-%M-%S}
    distribution: categorical
#
#
